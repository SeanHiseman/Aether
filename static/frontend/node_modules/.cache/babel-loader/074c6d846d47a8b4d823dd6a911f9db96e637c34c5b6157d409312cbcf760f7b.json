{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/seanh/OneDrive/Aether/static/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/seanh/OneDrive/Aether/static/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/seanh/OneDrive/Aether/static/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'../css/profile.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UpdateBioButton=function UpdateBioButton(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEditing=_useState2[0],setIsEditing=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),bio=_useState4[0],setBio=_useState4[1];var handleUpdateBio=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,result;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch('/update_bio',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({bio:bio})});case 3:response=_context.sent;_context.next=6;return response.json();case 6:result=_context.sent;if(!response.ok){console.error('Failed to update bio:',result);}_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.error('Error updating bio:',_context.t0);case 13:case\"end\":return _context.stop();}},_callee,null,[[0,10]]);}));return function handleUpdateBio(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{children:isEditing?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"textarea\",{value:bio,onChange:function onChange(e){return setBio(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){setIsEditing(false);handleUpdateBio();},children:\"Save\"})]}):/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setIsEditing(true);},children:\"Edit Bio\"})});};export default UpdateBioButton;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","UpdateBioButton","_useState","_useState2","_slicedToArray","isEditing","setIsEditing","_useState3","_useState4","bio","setBio","handleUpdateBio","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","sent","json","ok","console","error","t0","stop","apply","arguments","children","value","onChange","e","target","onClick"],"sources":["C:/Users/seanh/OneDrive/Aether/static/frontend/src/components/updateBio.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../css/profile.css';\r\n\r\nconst UpdateBioButton = () => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [bio, setBio] = useState('');\r\n\r\n    const handleUpdateBio = async () => {\r\n        try {\r\n            const response = await fetch('/update_bio', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ bio })\r\n            });\r\n            const result = await response.json();\r\n            if (!response.ok){\r\n                console.error('Failed to update bio:', result);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error('Error updating bio:', error);\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            {isEditing ? (\r\n                <div>\r\n                    <textarea value={bio} onChange={(e) => setBio(e.target.value)}/>\r\n                    <button onClick={() => {setIsEditing(false); handleUpdateBio();}}>Save</button>\r\n                </div>\r\n            ) : (\r\n                <button onClick={() => setIsEditing(true)}>Edit Bio</button>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default UpdateBioButton;"],"mappings":"4ZAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5B,GAAM,CAAAC,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAA,CAAS,CAC1B,IAAAC,SAAA,CAAkCN,QAAQ,CAAC,KAAK,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA1CG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAC9B,IAAAI,UAAA,CAAsBX,QAAQ,CAAC,EAAE,CAAC,CAAAY,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA3BE,GAAG,CAAAD,UAAA,IAAEE,MAAM,CAAAF,UAAA,IAElB,GAAM,CAAAG,eAAe,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,QAAA,CAAAC,MAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAEO,CAAAC,KAAK,CAAC,aAAa,CAAE,CACxCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEpB,GAAG,CAAHA,GAAI,CAAC,CAChC,CAAC,CAAC,QANIQ,QAAQ,CAAAI,QAAA,CAAAS,IAAA,CAAAT,QAAA,CAAAE,IAAA,SAOO,CAAAN,QAAQ,CAACc,IAAI,CAAC,CAAC,QAA9Bb,MAAM,CAAAG,QAAA,CAAAS,IAAA,CACZ,GAAI,CAACb,QAAQ,CAACe,EAAE,CAAC,CACbC,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAEhB,MAAM,CAAC,CAClD,CAACG,QAAA,CAAAE,IAAA,kBAAAF,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAc,EAAA,CAAAd,QAAA,aAGDY,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAAb,QAAA,CAAAc,EAAO,CAAC,CAAC,yBAAAd,QAAA,CAAAe,IAAA,MAAApB,OAAA,iBAEnD,kBAjBK,CAAAL,eAAeA,CAAA,SAAAC,IAAA,CAAAyB,KAAA,MAAAC,SAAA,OAiBpB,CACD,mBACIxC,IAAA,QAAAyC,QAAA,CACKlC,SAAS,cACNL,KAAA,QAAAuC,QAAA,eACIzC,IAAA,aAAU0C,KAAK,CAAE/B,GAAI,CAACgC,QAAQ,CAAE,SAAAA,SAACC,CAAC,QAAK,CAAAhC,MAAM,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,EAAC,CAAC,CAAC,cAChE1C,IAAA,WAAQ8C,OAAO,CAAE,SAAAA,QAAA,CAAM,CAACtC,YAAY,CAAC,KAAK,CAAC,CAAEK,eAAe,CAAC,CAAC,CAAC,CAAE,CAAA4B,QAAA,CAAC,MAAI,CAAQ,CAAC,EAC9E,CAAC,cAENzC,IAAA,WAAQ8C,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAtC,YAAY,CAAC,IAAI,CAAC,EAAC,CAAAiC,QAAA,CAAC,UAAQ,CAAQ,CAC9D,CACA,CAAC,CAEd,CAAC,CACD,cAAe,CAAAtC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}