{"ast":null,"code":"import _toConsumableArray from\"C:/Users/seanh/OneDrive/Aether/static/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/seanh/OneDrive/Aether/static/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{io}from\"socket.io-client\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DirectMessages=function DirectMessages(_ref){var friendId=_ref.friendId,conversationId=_ref.conversationId;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),chat=_useState4[0],setChat=_useState4[1];var socket=io(\"http://localhost:8000\");useEffect(function(){//Listen for incoming messages\nsocket.on('receive_message',function(message){setChat(function(prevChat){return[].concat(_toConsumableArray(prevChat),[message]);});});//Get existing messages\nif(conversationId){fetch(\"/get_chat_messages/\".concat(conversationId)).then(function(response){return response.json();}).then(function(data){if(data.error){console.error(\"Conversation not found\");}else{setChat(data);}}).catch(function(error){return console.log(\"Error fetching chat messages\",error);});}return function(){socket.disconnect();};},[conversationId]);var sendMessage=function sendMessage(){//Emits new message to server\nvar newMessage={content:message,senderid:friendId,timestamp:new Date().toISOString()};socket.emit('send_message',newMessage);setMessage('');setChat(function(prevChat){return[].concat(_toConsumableArray(prevChat),[newMessage]);});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Direct Messages Component\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chatBox\",children:chat.map(function(message,index){return/*#__PURE__*/_jsx(\"div\",{children:message.content},index);})}),/*#__PURE__*/_jsx(\"input\",{value:message,onChange:function onChange(e){return setMessage(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"Send\"})]});};export default DirectMessages;","map":{"version":3,"names":["React","useState","useEffect","io","jsx","_jsx","jsxs","_jsxs","DirectMessages","_ref","friendId","conversationId","_useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","chat","setChat","socket","on","prevChat","concat","_toConsumableArray","fetch","then","response","json","data","error","console","catch","log","disconnect","sendMessage","newMessage","content","senderid","timestamp","Date","toISOString","emit","children","className","map","index","value","onChange","e","target","onClick"],"sources":["C:/Users/seanh/OneDrive/Aether/static/frontend/src/components/directMessages.js"],"sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst DirectMessages = ({ friendId , conversationId }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [chat, setChat] = useState([]);\r\n    const socket = io(\"http://localhost:8000\");\r\n\r\n    useEffect(() => {\r\n        //Listen for incoming messages\r\n        socket.on('receive_message', (message) => {\r\n            setChat(prevChat => [...prevChat, message]);\r\n        });\r\n\r\n        //Get existing messages\r\n        if (conversationId){\r\n            fetch(`/get_chat_messages/${conversationId}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.error){\r\n                    console.error(\"Conversation not found\");\r\n                }\r\n                else{\r\n                    setChat(data);\r\n                }\r\n            })\r\n            .catch(error => console.log(\"Error fetching chat messages\", error));\r\n        }\r\n        \r\n        return () => {\r\n            socket.disconnect();\r\n        };\r\n    }, [conversationId]);\r\n\r\n    const sendMessage = () => {\r\n        //Emits new message to server\r\n        const newMessage = {\r\n            content: message,\r\n            senderid: friendId,\r\n            timestamp: new Date().toISOString()\r\n        };\r\n        socket.emit('send_message', newMessage);\r\n        setMessage('');\r\n        setChat(prevChat => [...prevChat, newMessage])\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <p>Direct Messages Component</p>\r\n            <div className=\"chatBox\">\r\n                {chat.map((message, index) => (\r\n                    <div key={index}>{message.content}</div>\r\n                ))}\r\n            </div>\r\n            <input value={message} onChange={(e) => setMessage(e.target.value)}/>\r\n            <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n    );\r\n};\r\nexport default DirectMessages;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}