[{"C:\\Users\\seanh\\OneDrive\\Aether\\static\\frontend\\src\\index.js":"1","C:\\Users\\seanh\\OneDrive\\Aether\\static\\frontend\\src\\components\\friendRequestsList.js":"2","C:\\Users\\seanh\\OneDrive\\Aether\\static\\frontend\\src\\components\\messagesButton.js":"3","C:\\Users\\seanh\\OneDrive\\Aether\\static\\frontend\\src\\components\\sendFriendRequest.js":"4","C:\\Users\\seanh\\OneDrive\\Aether\\static\\frontend\\src\\components\\updateBio.js":"5","C:\\Users\\seanh\\OneDrive\\Aether\\static\\frontend\\src\\components\\directMessages.js":"6","C:\\Users\\seanh\\OneDrive\\Aether\\static\\frontend\\src\\components\\chatApp.js":"7","C:\\Users\\seanh\\OneDrive\\Aether\\static\\frontend\\src\\components\\userContext.js":"8"},{"size":1347,"mtime":1699794006344,"results":"9","hashOfConfig":"10"},{"size":1866,"mtime":1698340295807,"results":"11","hashOfConfig":"10"},{"size":2141,"mtime":1699390709103,"results":"12","hashOfConfig":"10"},{"size":1005,"mtime":1698272452565,"results":"13","hashOfConfig":"10"},{"size":1331,"mtime":1698342139893,"results":"14","hashOfConfig":"10"},{"size":2828,"mtime":1699706230409,"results":"15","hashOfConfig":"10"},{"size":854,"mtime":1699639878445,"results":"16","hashOfConfig":"10"},{"size":820,"mtime":1699648676605,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eg5yf4",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\seanh\\OneDrive\\Aether\\static\\frontend\\src\\index.js",[],[],"C:\\Users\\seanh\\OneDrive\\Aether\\static\\frontend\\src\\components\\friendRequestsList.js",[],[],"C:\\Users\\seanh\\OneDrive\\Aether\\static\\frontend\\src\\components\\messagesButton.js",[],[],"C:\\Users\\seanh\\OneDrive\\Aether\\static\\frontend\\src\\components\\sendFriendRequest.js",[],[],"C:\\Users\\seanh\\OneDrive\\Aether\\static\\frontend\\src\\components\\updateBio.js",[],[],"C:\\Users\\seanh\\OneDrive\\Aether\\static\\frontend\\src\\components\\directMessages.js",["44"],[],"import React, {useState, useEffect, useRef, useContext } from 'react';\r\nimport { io } from \"socket.io-client\";\r\nimport { useUser } from '../components/userContext';\r\nimport '../css/messages.css';\r\n\r\nconst socket = io(\"http://localhost:8000/chat\");\r\n\r\nconst DirectMessages = ({ friendId , friendName, conversationId }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [chat, setChat] = useState([]);\r\n    const { user } = useUser();\r\n    const chatBoxRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        //Listen for incoming messages\r\n        socket.on('receive_message', (message) => {\r\n            setChat(prevChat => [...prevChat, message]);\r\n        });\r\n        \r\n        socket.on('error_message', function(data) {\r\n            alert(data.error);\r\n        });\r\n\r\n        socket.on('message_confirmed', (message) => {\r\n            setChat(prevChat => [...prevChat, message]);\r\n        });\r\n    \r\n        //Get existing messages\r\n        if (conversationId){\r\n            fetch(`/get_chat_messages/${conversationId}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.error){\r\n                    console.error(\"Conversation not found\");\r\n                }\r\n                else{\r\n                    setChat(data);\r\n                }\r\n            })\r\n            .catch(error => console.log(\"Error fetching chat messages\", error));\r\n        }\r\n        return () => {\r\n            socket.off('receive message');\r\n            socket.off('error_message');\r\n            socket.off('message_confirmed');\r\n        };\r\n    }, [conversationId]);\r\n\r\n    const sendMessage = () => {\r\n        //Emits new message to server\r\n        const newMessage = {\r\n            content: message,\r\n            senderId: user.user_id,\r\n            conversationId: conversationId,\r\n        };\r\n        socket.emit('send_message', newMessage);\r\n        setMessage('');\r\n    };\r\n\r\n    if (!user) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-header\">\r\n                {friendName} \r\n            </div>\r\n            <div className=\"chat-messages\" ref={chatBoxRef}> \r\n                {chat.map((msg, index) => (\r\n                        <div key={index} className={`message ${msg.senderId === user.user_id ? 'outgoing' : 'incoming'}`}>\r\n                            {msg.content}\r\n                        </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat-input\">\r\n                <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} placeholder=\"Type a message...\"/>\r\n                <button id=\"message-send-button\" onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default DirectMessages;","C:\\Users\\seanh\\OneDrive\\Aether\\static\\frontend\\src\\components\\chatApp.js",["45"],[],"import React, { useEffect, useState } from 'react';\r\nimport MessagesButton from './messagesButton';\r\nimport DirectMessages from './directMessages';\r\n\r\nconst ChatApp = () => {\r\n    const [selectedFriend, setSelectedFriend] = useState(null);\r\n    const [conversationId, setConversationId] = useState(null);\r\n    useEffect(() => {\r\n        //Empty for now\r\n      }, [selectedFriend, conversationId]);\r\n    return (\r\n        <div>\r\n            <MessagesButton onSelectFriend={(friend, conversation) => {\r\n                selectedFriend(friend);\r\n                setConversationId(conversation);\r\n            }}/>\r\n            {selectedFriend && (\r\n            <DirectMessages \r\n                friendId={selectedFriend} \r\n                conversationId={conversationId}\r\n            />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatApp;\r\n","C:\\Users\\seanh\\OneDrive\\Aether\\static\\frontend\\src\\components\\userContext.js",[],[],{"ruleId":"46","severity":1,"message":"47","line":1,"column":45,"nodeType":"48","messageId":"49","endLine":1,"endColumn":55},{"ruleId":"46","severity":1,"message":"50","line":6,"column":28,"nodeType":"48","messageId":"49","endLine":6,"endColumn":45},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'setSelectedFriend' is assigned a value but never used."]