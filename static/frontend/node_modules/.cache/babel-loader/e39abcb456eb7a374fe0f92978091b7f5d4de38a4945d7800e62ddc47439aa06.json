{"ast":null,"code":"import _toConsumableArray from\"C:/Users/seanh/OneDrive/Aether/static/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/seanh/OneDrive/Aether/static/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useRef,useContext}from'react';import{io}from\"socket.io-client\";import{useUser}from'../components/userContext';import'../css/messages.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var socket=io(\"http://localhost:8000/chat\");var DirectMessages=function DirectMessages(_ref){var friendId=_ref.friendId,friendName=_ref.friendName,conversationId=_ref.conversationId;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),chat=_useState4[0],setChat=_useState4[1];var _useUser=useUser(),user=_useUser.user;console.log(\"User from context:\",user);var chatBoxRef=useRef(null);useEffect(function(){//Listen for incoming messages\nsocket.on('receive_message',function(message){setChat(function(prevChat){return[].concat(_toConsumableArray(prevChat),[message]);});});//Get existing messages\nif(conversationId){fetch(\"/get_chat_messages/\".concat(conversationId)).then(function(response){return response.json();}).then(function(data){if(data.error){console.error(\"Conversation not found\");}else{setChat(data);}}).catch(function(error){return console.log(\"Error fetching chat messages\",error);});}console.log(\"Current chat state:\",chat);return function(){socket.off('receive message');};},[conversationId],[chat]);var sendMessage=function sendMessage(){//Emits new message to server\nvar newMessage={content:message,senderId:user.user_id,conversationId:conversationId};socket.emit('send_message',newMessage);setMessage('');setChat(function(prevChat){return[].concat(_toConsumableArray(prevChat),[newMessage]);});};if(!user){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-header\",children:friendName}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-messages\",ref:chatBoxRef,children:chat.map(function(msg,index){console.log(\"Message ID: \".concat(msg.senderId,\", User ID: \").concat(user.id));return/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(msg.senderId===user.id?'outgoing':'incoming'),children:msg.content},index);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:message,onChange:function onChange(e){return setMessage(e.target.value);},placeholder:\"Type a message...\"}),/*#__PURE__*/_jsx(\"button\",{className:\"send\",onClick:sendMessage,children:\"Send\"})]})]});};export default DirectMessages;","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","io","useUser","jsx","_jsx","jsxs","_jsxs","socket","DirectMessages","_ref","friendId","friendName","conversationId","_useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","chat","setChat","_useUser","user","console","log","chatBoxRef","on","prevChat","concat","_toConsumableArray","fetch","then","response","json","data","error","catch","off","sendMessage","newMessage","content","senderId","user_id","emit","children","className","ref","map","msg","index","id","type","value","onChange","e","target","placeholder","onClick"],"sources":["C:/Users/seanh/OneDrive/Aether/static/frontend/src/components/directMessages.js"],"sourcesContent":["import React, {useState, useEffect, useRef, useContext } from 'react';\r\nimport { io } from \"socket.io-client\";\r\nimport { useUser } from '../components/userContext';\r\nimport '../css/messages.css';\r\n\r\nconst socket = io(\"http://localhost:8000/chat\");\r\n\r\nconst DirectMessages = ({ friendId , friendName, conversationId }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [chat, setChat] = useState([]);\r\n    const { user } = useUser();\r\n    console.log(\"User from context:\", user);\r\n    const chatBoxRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        //Listen for incoming messages\r\n        socket.on('receive_message', (message) => {\r\n            setChat(prevChat => [...prevChat, message]);\r\n        });\r\n\r\n        //Get existing messages\r\n        if (conversationId){\r\n            fetch(`/get_chat_messages/${conversationId}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.error){\r\n                    console.error(\"Conversation not found\");\r\n                }\r\n                else{\r\n                    setChat(data);\r\n                }\r\n            })\r\n            .catch(error => console.log(\"Error fetching chat messages\", error));\r\n        }\r\n        console.log(\"Current chat state:\", chat);\r\n        return () => {socket.off('receive message');\r\n        };\r\n    }, [conversationId], [chat]);\r\n\r\n    const sendMessage = () => {\r\n        //Emits new message to server\r\n        const newMessage = {\r\n            content: message,\r\n            senderId: user.user_id,\r\n            conversationId: conversationId,\r\n        };\r\n        socket.emit('send_message', newMessage);\r\n        setMessage('');\r\n        setChat(prevChat => [...prevChat, newMessage])\r\n    };\r\n\r\n    if (!user) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-header\">\r\n                {friendName} \r\n            </div>\r\n            <div className=\"chat-messages\" ref={chatBoxRef}> \r\n                {chat.map((msg, index) => {\r\n                    console.log(`Message ID: ${msg.senderId}, User ID: ${user.id}`);\r\n                    return (\r\n                        <div key={index} className={`message ${msg.senderId === user.id ? 'outgoing' : 'incoming'}`}>\r\n                            {msg.content}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className=\"chat-input\">\r\n                <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} placeholder=\"Type a message...\"/>\r\n                <button className=\"send\" onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default DirectMessages;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}