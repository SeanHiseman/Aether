{"ast":null,"code":"import _toConsumableArray from\"C:/Users/seanh/OneDrive/Aether/static/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/seanh/OneDrive/Aether/static/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{io}from\"socket.io-client\";import'./css/messages.css';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var socket=io(\"http://localhost:8000/chat\");var DirectMessages=function DirectMessages(_ref){var friendId=_ref.friendId,conversationId=_ref.conversationId;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),chat=_useState4[0],setChat=_useState4[1];useEffect(function(){//Listen for incoming messages\nsocket.on('receive_message',function(message){setChat(function(prevChat){return[].concat(_toConsumableArray(prevChat),[message]);});});//Get existing messages\nif(conversationId){fetch(\"/get_chat_messages/\".concat(conversationId)).then(function(response){return response.json();}).then(function(data){if(data.error){console.error(\"Conversation not found\");}else{setChat(data);}}).catch(function(error){return console.log(\"Error fetching chat messages\",error);});}return function(){socket.off('receive message');};},[conversationId]);var sendMessage=function sendMessage(){//Emits new message to server\nvar newMessage={content:message,senderId:friendId,conversationId:conversationId};socket.emit('send_message',newMessage);setMessage('');setChat(function(prevChat){return[].concat(_toConsumableArray(prevChat),[newMessage]);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[\"Chat with \",friendId,\" \"]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-messages\",ref:chatBoxRef,children:chat.map(function(message,index){return/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.senderId===friendId?'incoming':'outgoing'),children:message.content},index);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:message,onChange:function onChange(e){return setMessage(e.target.value);},placeholder:\"Type a message...\"}),/*#__PURE__*/_jsx(\"button\",{className:\"send\",onClick:sendMessage,children:\"Send\"})]})]});};export default DirectMessages;","map":{"version":3,"names":["React","useState","useEffect","io","jsxs","_jsxs","jsx","_jsx","socket","DirectMessages","_ref","friendId","conversationId","_useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","chat","setChat","on","prevChat","concat","_toConsumableArray","fetch","then","response","json","data","error","console","catch","log","off","sendMessage","newMessage","content","senderId","emit","className","children","ref","chatBoxRef","map","index","type","value","onChange","e","target","placeholder","onClick"],"sources":["C:/Users/seanh/OneDrive/Aether/static/frontend/src/components/directMessages.js"],"sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport { io } from \"socket.io-client\";\r\nimport './css/messages.css';\r\n\r\nconst socket = io(\"http://localhost:8000/chat\");\r\n\r\nconst DirectMessages = ({ friendId , conversationId }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [chat, setChat] = useState([]);\r\n\r\n    useEffect(() => {\r\n        //Listen for incoming messages\r\n        socket.on('receive_message', (message) => {\r\n            setChat(prevChat => [...prevChat, message]);\r\n        });\r\n\r\n        //Get existing messages\r\n        if (conversationId){\r\n            fetch(`/get_chat_messages/${conversationId}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.error){\r\n                    console.error(\"Conversation not found\");\r\n                }\r\n                else{\r\n                    setChat(data);\r\n                }\r\n            })\r\n            .catch(error => console.log(\"Error fetching chat messages\", error));\r\n        }\r\n        \r\n        return () => {socket.off('receive message');\r\n        };\r\n    }, [conversationId]);\r\n\r\n    const sendMessage = () => {\r\n        //Emits new message to server\r\n        const newMessage = {\r\n            content: message,\r\n            senderId: friendId,\r\n            conversationId: conversationId,\r\n        };\r\n        socket.emit('send_message', newMessage);\r\n        setMessage('');\r\n        setChat(prevChat => [...prevChat, newMessage])\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-header\">\r\n                Chat with {friendId} {/* You might want to replace friendId with friend's name */}\r\n            </div>\r\n            <div className=\"chat-messages\" ref={chatBoxRef}>\r\n                {chat.map((message, index) => (\r\n                    <div key={index} className={`message ${message.senderId === friendId ? 'incoming' : 'outgoing'}`}>\r\n                        {message.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat-input\">\r\n                <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} placeholder=\"Type a message...\"/>\r\n                <button className=\"send\" onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default DirectMessages;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}